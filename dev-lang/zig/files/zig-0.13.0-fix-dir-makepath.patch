# https://github.com/ziglang/zig/pull/20397
# https://github.com/Jamim/zig/commit/b543a49f

Author: Aliaksei Urbanski <aliaksei.urbanski@gmail.com>
Date: Sun, 23 Jun 2024 11:24:33 +0300
Subject: std.fs.Dir.makePath: fix for libc systems

The 'fs.test.test.makepath relative walks' test revealed
a malfunction in the makePath when using the libc API.

Paths like "first/../second/.." were considered existing
although some of their components might be missing.

diff --git a/lib/std/fs/Dir.zig b/lib/std/fs/Dir.zig
index 9b8406d6b290..7807df9f7729 100644
--- a/lib/std/fs/Dir.zig
+++ b/lib/std/fs/Dir.zig
@@ -1159,6 +1159,13 @@ pub fn makePath(self: Dir, sub_path: []const u8) (MakeError || StatFileError)!vo
                     // workaround for windows, see https://github.com/ziglang/zig/issues/16738
                     const fstat = self.statFile(component.path) catch |stat_err| switch (stat_err) {
                         error.IsDir => break :check_dir,
+                        error.FileNotFound => {
+                            // for paths like "first/../second/..", the libc implementation of mkdirat
+                            // causes PathAlreadyExists no matter if path components exist or not, so
+                            // there may be FileNotFound in case some of them are still to be created
+                            component = it.previous() orelse return stat_err;
+                            continue;
+                        },
                         else => |e| return e,
                     };
                     if (fstat.kind != .directory) return error.NotDir;
